name: Build and Publish Electron App

permissions:
  contents: write
  actions: read

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:
  build-and-publish:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Check pnpm version
        run: pnpm --version

      - name: Install Dependencies
        run: pnpm install

      - name: Build Renderer
        working-directory: packages/renderer
        run: pnpm run build

      - name: Build Electron App
        working-directory: packages/electron
        run: pnpm run build

      - name: Package Electron App
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: packages/electron
        run: npx electron-builder --dir --${{ matrix.os == 'macos-latest' && 'mac' || matrix.os == 'windows-latest' && 'win' || 'linux' }}

      - name: Publish Release
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: packages/electron
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: npx electron-builder --publish always --${{ matrix.os == 'macos-latest' && 'mac' || matrix.os == 'windows-latest' && 'win' || 'linux' }}